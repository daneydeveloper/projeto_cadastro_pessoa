{"ast":null,"code":"var _jsxFileName = \"/Users/daneycampos/Developer/cadastro-usuario-material-ui/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para armazenar a lista de usuários\n  const [users, setUsers] = useState([]);\n\n  // Estado para armazenar o valor do input de pesquisa\n  const [searchValue, setSearchValue] = useState('');\n\n  // Função para adicionar um novo usuário (será chamada pelo botão \"Criar Novo Usuário\")\n  const handleAddUser = () => {\n    // Implemente aqui a lógica para adicionar um novo usuário à lista de usuários\n    // Por exemplo, exibir um modal ou redirecionar para outra página com o formulário de cadastro\n    console.log('Adicionar novo usuário');\n  };\n\n  // Função para pesquisar usuários (será chamada pelo botão \"Pesquisar\")\n  const handleSearch = () => {\n    // Implemente aqui a lógica para filtrar a lista de usuários com base no valor de pesquisa\n    // e atualizar o estado 'users' com os resultados da pesquisa\n    console.log('Pesquisar usuários com o valor:', searchValue);\n  };\n\n  // Estado para armazenar os dados do novo usuário\n  const [user, setUser] = useState({\n    personType: '',\n    name: '',\n    cpf: '',\n    phone: '',\n    email: '',\n    addresses: []\n  });\n\n  // Estado para armazenar o novo endereço digitado\n  const [newAddress, setNewAddress] = useState('');\n\n  // Função para atualizar o estado do novo usuário com os dados do formulário\n  const handleChange = event => {\n    setUser({\n      ...user,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // Função para adicionar o novo endereço à lista de endereços\n  const handleAddAddress = () => {\n    setUser({\n      ...user,\n      addresses: [...user.addresses, newAddress]\n    });\n    setNewAddress('');\n  };\n\n  // Função para enviar o formulário de novo usuário (será chamada pelo botão \"Salvar\")\n  const handleSubmit = () => {\n    // Implemente aqui a lógica para enviar os dados do novo usuário para o backend\n    console.log('Novo usuário enviado:', user);\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //     <h1>Cadastro de Usuário</h1>\n    //     <div className=\"search-and-create\">\n    //         <TextField\n    //             label=\"Pesquisar\"\n    //             value={searchValue}\n    //             onChange={(e) => setSearchValue(e.target.value)}\n    //         />\n    //         <Button variant=\"contained\" onClick={handleSearch}>Pesquisar</Button>\n    //         <Button variant=\"contained\" onClick={handleAddUser}>Criar Novo Usuário</Button>\n    //     </div>\n    //     <TableContainer component={Paper}>\n    //         <Table>\n    //             <TableHead>\n    //                 <TableRow>\n    //                     <TableCell>Nome</TableCell>\n    //                     <TableCell>CPF/CNPJ</TableCell>\n    //                     <TableCell>Telefone</TableCell>\n    //                     <TableCell>Email</TableCell>\n    //                     <TableCell>Endereços Comerciais</TableCell>\n    //                     <TableCell>Endereços Residenciais</TableCell>\n    //                     <TableCell>Ações</TableCell>\n    //                 </TableRow>\n    //             </TableHead>\n    //             <TableBody>\n    //                 {/* Mapear a lista de usuários aqui para gerar as linhas da tabela */}\n    //                 {users.map((user) => (\n    //                     <TableRow key={user.id}>\n    //                         <TableCell>{user.name}</TableCell>\n    //                         <TableCell>{user.cpf_cnpj}</TableCell>\n    //                         <TableCell>{user.phone}</TableCell>\n    //                         <TableCell>{user.email}</TableCell>\n    //                         <TableCell>{user.businessAddresses}</TableCell>\n    //                         <TableCell>{user.residentialAddresses}</TableCell>\n    //                         <TableCell>\n    //                             {/* Implementar os botões de ação (editar, excluir, etc.) para cada usuário */}\n    //                             <Button variant=\"contained\" color=\"primary\">Editar</Button>\n    //                             <Button variant=\"contained\" color=\"secondary\">Excluir</Button>\n    //                         </TableCell>\n    //                     </TableRow>\n    //                 ))}\n    //             </TableBody>\n    //         </Table>\n    //     </TableContainer>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inserir novo usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo de pessoa:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"personType\",\n          value: user.personType,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"fisica\",\n            children: \"F\\xEDsica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"juridica\",\n            children: \"Jur\\xEDdica\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Nome\",\n          name: \"name\",\n          value: user.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"CPF\",\n          name: \"cpf\",\n          value: user.cpf,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Telefone\",\n          name: \"phone\",\n          value: user.phone,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleAddAddress,\n          children: \"Adicionar novo endere\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: user.addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: address\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSubmit,\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(App, \"Q2phOQX997zZbPU9ZggevKhLSU4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TextField","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","jsxDEV","_jsxDEV","App","_s","users","setUsers","searchValue","setSearchValue","handleAddUser","console","log","handleSearch","user","setUser","personType","name","cpf","phone","email","addresses","newAddress","setNewAddress","handleChange","event","target","value","handleAddAddress","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","label","variant","onClick","map","address","index","color","_c","$RefreshReg$"],"sources":["/Users/daneycampos/Developer/cadastro-usuario-material-ui/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\nimport './App.css';\n\nfunction App() {\n    // Estado para armazenar a lista de usuários\n    const [users, setUsers] = useState([]);\n\n    // Estado para armazenar o valor do input de pesquisa\n    const [searchValue, setSearchValue] = useState('');\n\n    // Função para adicionar um novo usuário (será chamada pelo botão \"Criar Novo Usuário\")\n    const handleAddUser = () => {\n        // Implemente aqui a lógica para adicionar um novo usuário à lista de usuários\n        // Por exemplo, exibir um modal ou redirecionar para outra página com o formulário de cadastro\n        console.log('Adicionar novo usuário');\n    };\n\n    // Função para pesquisar usuários (será chamada pelo botão \"Pesquisar\")\n    const handleSearch = () => {\n        // Implemente aqui a lógica para filtrar a lista de usuários com base no valor de pesquisa\n        // e atualizar o estado 'users' com os resultados da pesquisa\n        console.log('Pesquisar usuários com o valor:', searchValue);\n    };\n\n    // Estado para armazenar os dados do novo usuário\n    const [user, setUser] = useState({\n        personType: '',\n        name: '',\n        cpf: '',\n        phone: '',\n        email: '',\n        addresses: [],\n    });\n\n    // Estado para armazenar o novo endereço digitado\n    const [newAddress, setNewAddress] = useState('');\n\n    // Função para atualizar o estado do novo usuário com os dados do formulário\n    const handleChange = (event) => {\n        setUser({ ...user, [event.target.name]: event.target.value });\n    };\n\n    // Função para adicionar o novo endereço à lista de endereços\n    const handleAddAddress = () => {\n        setUser({ ...user, addresses: [...user.addresses, newAddress] });\n        setNewAddress('');\n    };\n\n    // Função para enviar o formulário de novo usuário (será chamada pelo botão \"Salvar\")\n    const handleSubmit = () => {\n        // Implemente aqui a lógica para enviar os dados do novo usuário para o backend\n        console.log('Novo usuário enviado:', user);\n    };\n\n    return (\n        // <div>\n        //     <h1>Cadastro de Usuário</h1>\n        //     <div className=\"search-and-create\">\n        //         <TextField\n        //             label=\"Pesquisar\"\n        //             value={searchValue}\n        //             onChange={(e) => setSearchValue(e.target.value)}\n        //         />\n        //         <Button variant=\"contained\" onClick={handleSearch}>Pesquisar</Button>\n        //         <Button variant=\"contained\" onClick={handleAddUser}>Criar Novo Usuário</Button>\n        //     </div>\n        //     <TableContainer component={Paper}>\n        //         <Table>\n        //             <TableHead>\n        //                 <TableRow>\n        //                     <TableCell>Nome</TableCell>\n        //                     <TableCell>CPF/CNPJ</TableCell>\n        //                     <TableCell>Telefone</TableCell>\n        //                     <TableCell>Email</TableCell>\n        //                     <TableCell>Endereços Comerciais</TableCell>\n        //                     <TableCell>Endereços Residenciais</TableCell>\n        //                     <TableCell>Ações</TableCell>\n        //                 </TableRow>\n        //             </TableHead>\n        //             <TableBody>\n        //                 {/* Mapear a lista de usuários aqui para gerar as linhas da tabela */}\n        //                 {users.map((user) => (\n        //                     <TableRow key={user.id}>\n        //                         <TableCell>{user.name}</TableCell>\n        //                         <TableCell>{user.cpf_cnpj}</TableCell>\n        //                         <TableCell>{user.phone}</TableCell>\n        //                         <TableCell>{user.email}</TableCell>\n        //                         <TableCell>{user.businessAddresses}</TableCell>\n        //                         <TableCell>{user.residentialAddresses}</TableCell>\n        //                         <TableCell>\n        //                             {/* Implementar os botões de ação (editar, excluir, etc.) para cada usuário */}\n        //                             <Button variant=\"contained\" color=\"primary\">Editar</Button>\n        //                             <Button variant=\"contained\" color=\"secondary\">Excluir</Button>\n        //                         </TableCell>\n        //                     </TableRow>\n        //                 ))}\n        //             </TableBody>\n        //         </Table>\n        //     </TableContainer>\n        // </div>\n        <div>\n            <h1>Inserir novo usuário</h1>\n            <div>\n                <label>Tipo de pessoa:</label>\n                <select name=\"personType\" value={user.personType} onChange={handleChange}>\n                    <option value=\"fisica\">Física</option>\n                    <option value=\"juridica\">Jurídica</option>\n                </select>\n            </div>\n            <div>\n                <TextField\n                    label=\"Nome\"\n                    name=\"name\"\n                    value={user.name}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <TextField\n                    label=\"CPF\"\n                    name=\"cpf\"\n                    value={user.cpf}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <TextField\n                    label=\"Telefone\"\n                    name=\"phone\"\n                    value={user.phone}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <TextField\n                    label=\"Email\"\n                    name=\"email\"\n                    value={user.email}\n                    onChange={handleChange}\n                />\n            </div>\n            <div>\n                <Button variant=\"contained\" onClick={handleAddAddress}>Adicionar novo endereço</Button>\n                <ul>\n                    {/* Exibir a lista de endereços */}\n                    {user.addresses.map((address, index) => (\n                        <li key={index}>{address}</li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Salvar</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}